(()=>{var E=Object.defineProperty;var b=Object.getOwnPropertySymbols;var P=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable;var x=a=>{throw TypeError(a)};var g=(a,t,o)=>t in a?E(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o,c=(a,t)=>{for(var o in t||(t={}))P.call(t,o)&&g(a,o,t[o]);if(b)for(var o of b(t))M.call(t,o)&&g(a,o,t[o]);return a};var T=(a,t,o)=>t.has(a)||x("Cannot "+o);var y=(a,t,o)=>t.has(a)?x("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(a):t.set(a,o);var _=(a,t,o)=>(T(a,t,"access private method"),o);var w=(a,t,o)=>new Promise((n,e)=>{var d=l=>{try{s(o.next(l))}catch(i){e(i)}},p=l=>{try{s(o.throw(l))}catch(i){e(i)}},s=l=>l.done?n(l.value):Promise.resolve(l.value).then(d,p);s((o=o.apply(a,t)).next())});var k=`<button class="contactmodal__btn contactmodal__click">
    <svg 
        version="1.1" 
        xmlns="http://www.w3.org/2000/svg" 
        xmlns:xlink="http://www.w3.org/1999/xlink" 
        xml:space="preserve" 
        viewBox="0 0 120 90"
    >
        <path 
            d="M60,0 l50,0 a10,10 0 0,1 7,17 l-50,50 a10,10 0 0,1 -13,0 l-50,-50 a10,10 0 0,1 7,-17z" 
            stroke="#000" 
            stroke-width="0"
        />
        <path 
            d="M60,90 l54,0 a10,10 0 0,0 7,-7 l0,-60 -50,50 a15,15 0 0,1 -21,0 l-50,-50 0,60 a10,10 0 0,0 7,7z" 
            stroke="#000" 
            stroke-width="0" 
        />  
    </svg>
</button>
<div class="contactmodal">
    <div class="contactmodal__contact">
        <button class="contactmodal__exit contactmodal__click">
            &#215;
        </button>
        <h3 class="contactmodal__title contactmodal__title--contact">
            {{ title }}
        </h3>
        <p class="contactmodal__sub-title contactmodal__sub-title--contact">
            {{ subtitle }}
        </p>
        <form id="contact__form" class="contactmodal__form">
            <div class="form__item">
                <input 
                    class="input" 
                    id="user_name" 
                    type="text" 
                    placeholder="{{ namePlaceholder }}" 
                    value="{{ name }}"
                    required 
                />
            </div>
            <div class="form__item">
                <input 
                    class="input" 
                    id="user_email" 
                    type="email" 
                    placeholder="{{ emailPlaceholder }}" 
                    value="{{ email }}"
                    required 
                />
            </div>
            <div class="form__item">
                <input 
                    class="input" 
                    id="user_phone" 
                    type="tel" 
                    placeholder="{{ phonePlaceholder }}" 
                    value="{{ phone }}"
                    required 
                />
            </div>
            <div class="form__item">
                <textarea 
                    class="input" 
                    id="user_message" 
                    placeholder="{{ messagePlaceholder }}" 
                    required
                ></textarea>
            </div>
            <button id="contact__submit" class="form__submit">
                {{ buttonText }}
            </button>
        </form>
        <div class="contactmodal__overlay contactmodal__overlay--loading">
            Loading...
        </div>
        <div class="contactmodal__overlay contactmodal__overlay--success">
            {{ successMssg }}
        </div>
        <div class="contactmodal__overlay contactmodal__overlay--error">
            {{ errorMssg }}
        </div>
    </div>
</div>`;var S=`@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700;900&display=swap');

:root {
    --bg-color: #242424;
    --text-color: #ffffff;
    --details-color: #ffffff;
}

#contactmodal * {
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
    color: var(--text-color);
    margin: 0;
    padding: 0;
}
#contactmodal .contactmodal__btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 60px;
    height: 60px;
    font-size: 32px;
    border-radius: 50%;
    border: 1px solid var(--bg-color);
    background-color: var(--bg-color);
    color: var(--text-color);
    position: fixed;
    bottom: 20px;
    z-index: 100;
    box-shadow: 0 12px 30px 0 rgb(0, 0, 0, 0.28);
}
#contactmodal .contactmodal__btn:hover, #contactmodal .contactmodal__btn:focus {
    background-color: var(--details-color);
    color: var(--bg-color);
    border-color: var(--bg-color);
}
#contactmodal.contactmodal--open .contactmodal__btn {
    display: none;
}
#contactmodal.right .contactmodal__btn {
    right: 20px;
}
#contactmodal.left .contactmodal__btn {
    left: 20px;
}
#contactmodal .contactmodal__btn svg {
    width: 55%;
}
#contactmodal .contactmodal__btn svg path {
    fill: var(--text-color);
}
#contactmodal .contactmodal__btn:hover svg path, #contactmodal .contactmodal__btn:focus svg path {
    fill: var(--bg-color);
}
#contactmodal .contactmodal__click {
    cursor: pointer;
    transition: all 300ms ease;
}
#contactmodal .contactmodal__click:hover {
    transform: scale(1.1);
}
#contactmodal .contactmodal__click:active {
    transform: scale(0.8);
}
#contactmodal .contactmodal {
    position: fixed;
    bottom: 20px;
    width: 370px;
    max-width: 400px;
    border-radius: 20px;
    overflow: hidden;
    display: flex;
    visibility: hidden;
    z-index: -1;
    transition: visibility 1s, z-index 1s, box-shadow 0.5s ease;
    text-align: center;
}
#contactmodal.contactmodal--open .contactmodal {
    z-index: 100;
    box-shadow: 0 20px 80px 0 rgb(0, 0, 0, 0.55);
    visibility: visible;
}
#contactmodal.right .contactmodal {
    right: 20px;
}
#contactmodal.left .contactmodal {
    left: 20px;
}
#contactmodal.contactmodal--open .contactmodal__contact {
    transform: translateX(0%) !important;
}
#contactmodal .contactmodal__contact {
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
    transition: all 300ms ease-in;
    background-color: var(--bg-color);
    color: var(--text-color);
    width: 100%;
    padding: 40px;
}
#contactmodal.right .contactmodal__contact {
    transform: translateX(110%);
}
#contactmodal.left .contactmodal__contact {
    transform: translateX(-110%);
}
#contactmodal .contactmodal .contactmodal__exit {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 40px;
    line-height: 1;
    color: var(--text-color);
    background: transparent;
    border: none;
    box-shadow: none;
}
#contactmodal .contactmodal .contactmodal__exit:hover {
    color: var(--details-color);
}
#contactmodal .contactmodal__title {
    font-size: 24px;
    text-align: left;
    line-height: 1.5;
}
#contactmodal .contactmodal__sub-title {
    margin: 4px 0 0 0;
    font-size: 14px;
    text-align: left;
    line-height: 1.5;
    font-style: italic;
}
#contactmodal .contactmodal__form {
    margin: 30px 0 0 0;
}
#contactmodal .contactmodal .form__item {
    margin-bottom: 20px;
}
#contactmodal .contactmodal input, #contactmodal .contactmodal textarea {
    width: 100%;
    background-color: var(--bg-color);
    color: var(--text-color);
    outline: none;
    border: 3px solid #c0c4cc;
    border-top: none;
    border-left: none;
    border-right: none;
    height: 40px;
    transition: all 300ms ease;
    font-size: 14px;
}
#contactmodal .contactmodal textarea {
    resize: vertical;
    height: 100px;
    margin-top: 8px;
    resize: none;
}
#contactmodal .contactmodal input:hover, #contactmodal textarea:hover {
    border-color: #dcdfe6;
}
#contactmodal .contactmodal input:focus, #contactmodal textarea:focus {
    border-color: var(--details-color);
}
#contactmodal .contactmodal input::placeholder, #contactmodal textarea::placeholder {
    color: var(--text-color);
    font-weight: 500;
    font-style: italic;
}
#contactmodal .contactmodal .form__submit {
    background-color: var(--text-color);
    border: 2px solid var(--text-color);
    border-radius: 10px;
    color: var(--bg-color);
    font-weight: 700;
    width: 100%;
    max-width: 200px;
    margin-top: 10px;
    padding: 12px 24px;
    font-size: 20px;
    transition: all 300ms ease;
    cursor: pointer;
}
#contactmodal .contactmodal .form__submit:hover, 
#contactmodal .contactmodal .form__submit:focus {
    border-color: var(--details-color);
    color: var(--details-color);
    background-color: transparent;
}
#contactmodal .contactmodal .contactmodal__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    align-items: center;
    justify-content: center;
    z-index: -1;
}
#contactmodal .contactmodal .contactmodal__overlay--loading {
    background-color: var(--bg-color);
    font-size: 20px;
}
#contactmodal .contactmodal .contactmodal__overlay--success {
    background-color: #33a72a;
    font-size: 24px;
    font-weight: 700;
    text-align: center;
    padding: 28px;
}
#contactmodal .contactmodal .contactmodal__overlay--error {
    background-color: #d41d1d;
    font-size: 24px;
    font-weight: 700;
    text-align: center;
    padding: 28px;
}
#contactmodal .contactmodal .contactmodal__overlay--visible {
    z-index: 1;
    display: flex;
}
#contactmodal .contactmodal .contactmodal__spinner {
    width: 1.5em;
    height: 1.5em;
    border-radius: 50%;
    box-shadow:
        0 -3em rgba(255, 255, 255, 1),
        2.25em -2.25em rgba(255, 255, 255, 0.875),
        3em 0 rgba(255, 255, 255, 0.75),
        2.25em 2.25em rgba(255, 255, 255, 0.625),
        0 3em rgba(255, 255, 255, 0.5),
        -2.25em 2.25em rgba(255, 255, 255, 0.375),
        -3em 0 rgba(255, 255, 255, 0.25);
    animation: contactmodal-spinner 800ms infinite linear;
}
@keyframes contactmodal-spinner {
    0% {
        transform: rotate(0);
    }
    100% {
        transform: rotate(360deg);
    }
}
@media (max-width: 500px) {
    #contactmodal .contactmodal__btn {
        width: 50px;
        height: 50px;
    }
    #contactmodal .contactmodal {
        width: calc(100% - 40px);
        margin: 0 auto;
        right: unset !important;
        left: 50% !important;
        transform: translateX(-50%);
    }
}`;var r,q,z,m=class{constructor(t={}){y(this,r);this.defaults={endpoint:"/contact",position:"right",name:!0,phone:!1,delay:5,values:{name:"",phone:"",email:""},token:{name:null,value:null},colors:{bg:"#242424",text:"#ffffff",details:"#ffffff"},texts:{title:"Let's have a chat!",subtitle:"",namePlaceholder:"Your Name",phonePlaceholder:"Your Phone",emailPlaceholder:"Your Email",messagePlaceholder:"Your Message",successMssg:"Thanks, your message has been sent!",errorMssg:"Uh-oh... Something went wrong. Please try again later.",buttonText:"Send"}},this.options=c(c({},this.defaults),t),t.values&&(this.options.values=c(c({},this.defaults.values),t.values)),t.colors&&(this.options.colors=c(c({},this.defaults.colors),t.colors)),t.texts&&(this.options.texts=c(c({},this.defaults.texts),t.texts)),t.token&&(this.options.token=c(c({},this.defaults.token),t.token)),_(this,r,q).call(this)}toggle(){this.modal.classList.toggle("contactmodal--open")}};r=new WeakSet,q=function(){let t=k;if(Object.keys(this.options.values).forEach(e=>{t=t.replace(`{{ ${e} }}`,this.options.values[e]||"")}),Object.keys(this.options.texts).forEach(e=>{t=t.replace(`{{ ${e} }}`,this.options.texts[e]||"")}),this.modal=document.createElement("div"),this.modal.id="contactmodal",this.modal.className=this.options.position,this.modal.innerHTML=t,this.form=this.modal.querySelector("form"),document.documentElement.style.setProperty("--bg-color",this.options.colors.bg),document.documentElement.style.setProperty("--text-color",this.options.colors.text),document.documentElement.style.setProperty("--details-color",this.options.colors.details),!this.options.name){let e=this.form.querySelector("#user_name");e.required=!1,e.parentElement.style.display="none"}if(!this.options.phone){let e=this.form.querySelector("#user_phone");e.required=!1,e.parentElement.style.display="none"}this.options.texts.subtitle||(this.modal.querySelector(".contactmodal__sub-title").style.display="none"),this.modal.querySelector(".contactmodal__btn").addEventListener("click",()=>this.toggle()),this.modal.querySelector(".contactmodal__exit").addEventListener("click",()=>this.toggle()),this.form.addEventListener("submit",e=>_(this,r,z).call(this,e));let o=document.createElement("style");o.textContent=S,document.head.appendChild(o);let n=document.createDocumentFragment();n.appendChild(this.modal),document.body.appendChild(n)},z=function(t){return w(this,null,function*(){var f,v;t.preventDefault();let o=this.form,n=this.modal.querySelector(".contactmodal__overlay--loading"),e=this.modal.querySelector(".contactmodal__overlay--success"),d=this.modal.querySelector(".contactmodal__overlay--error");n.classList.add("contactmodal__overlay--visible");let p=((f=o.querySelector("#user_name"))==null?void 0:f.value)||null,s=((v=o.querySelector("#user_phone"))==null?void 0:v.value)||null,l=o.querySelector("#user_email").value,i=o.querySelector("#user_message").value,{token:h}=this.options,L={name:p,phone:s,email:l,message:i,page:window.location.href,token:h.name&&h.value?h:null};try{let u=yield fetch(this.options.endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(L)});if(o.reset(),o.querySelector("button").blur(),n.classList.remove("contactmodal__overlay--visible"),u.ok)e.classList.add("contactmodal__overlay--visible"),setTimeout(()=>{e.classList.remove("contactmodal__overlay--visible")},this.options.delay*1e3);else throw new Error("Server responded with an error")}catch(u){console.error("Form submission error:",u),o.reset(),o.querySelector("button").blur(),n.classList.remove("contactmodal__overlay--visible"),d.classList.add("contactmodal__overlay--visible"),setTimeout(()=>{d.classList.remove("contactmodal__overlay--visible")},this.options.delay*1e3)}})};var D=m;window.ContactModal=m;})();
